plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a', 'arm64-v8a'
//            abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a', "x86_64"
        }

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        config {
            storeFile file('../test_key.jks')
            storePassword '123456'
            keyAlias = 'key0'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled true  //开启混淆
            zipAlignEnabled true  //压缩优化
            shrinkResources true  //打开资源压缩。
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled true  //开启混淆
            zipAlignEnabled true  //压缩优化
            shrinkResources true  //打开资源压缩。
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "app_v${variant.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    api 'com.geyifeng.immersionbar:immersionbar:3.2.2'

    api 'androidx.core:core-ktx:1.7.0'
    api 'androidx.appcompat:appcompat:1.4.1'
    api 'com.google.android.material:material:1.5.0'

    //RxJava2.0+ retrofit2
    api 'com.uber.autodispose:autodispose:1.4.0'
    api 'com.uber.autodispose:autodispose-android-archcomponents:1.4.0'
    // rxandroid   (https://github.com/ReactiveX/RxAndroid)
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //retrofit (https://github.com/square/retrofit)
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    //okttp  (https://github.com/square/okhttp)
    api 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    api 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    api 'androidx.multidex:multidex:2.0.1'
    implementation project(':mylibrary')
}